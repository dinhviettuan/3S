// <auto-generated />
using LoginCodeFirst.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LoginCodeFirst.Migrations
{
    [DbContext(typeof(CodeDataContext))]
    [Migration("20190523104048_AddRole")]
    partial class AddRole
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LoginCodeFirst.Models.Brand", b =>
                {
                    b.Property<int>("BrandId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrandName");

                    b.HasKey("BrandId");

                    b.ToTable("Brand");

                    b.HasData(
                        new
                        {
                            BrandId = 1,
                            BrandName = "chanel"
                        });
                });

            modelBuilder.Entity("LoginCodeFirst.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName");

                    b.HasKey("CategoryId");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "tui sach"
                        });
                });

            modelBuilder.Entity("LoginCodeFirst.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrandId");

                    b.Property<int>("CategoryId");

                    b.Property<string>("Image");

                    b.Property<decimal>("ListPrice");

                    b.Property<int>("ModelYear");

                    b.Property<string>("ProductName");

                    b.HasKey("ProductId");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            BrandId = 1,
                            CategoryId = 1,
                            Image = "wewqe",
                            ListPrice = 123456m,
                            ModelYear = 1,
                            ProductName = "giay"
                        });
                });

            modelBuilder.Entity("LoginCodeFirst.Models.Stock", b =>
                {
                    b.Property<int>("ProductId");

                    b.Property<int>("StoreId");

                    b.Property<int>("Quantity");

                    b.HasKey("ProductId", "StoreId");

                    b.HasIndex("StoreId");

                    b.ToTable("Stock");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            StoreId = 1,
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("LoginCodeFirst.Models.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasMaxLength(255);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(25);

                    b.Property<string>("State")
                        .HasMaxLength(10);

                    b.Property<string>("StoreName")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("Street")
                        .HasMaxLength(255);

                    b.Property<string>("ZipCode")
                        .HasMaxLength(5);

                    b.HasKey("Id");

                    b.ToTable("Store");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Hue City",
                            Email = "Tuan1@gmail.com",
                            Phone = "0768407899",
                            State = "Hue",
                            StoreName = "TuanStore",
                            Street = "51 minh mang",
                            ZipCode = "20000"
                        });
                });

            modelBuilder.Entity("LoginCodeFirst.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Fullname")
                        .HasMaxLength(100);

                    b.Property<bool>("IsActive");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Phone")
                        .HasMaxLength(100);

                    b.Property<int>("Role");

                    b.Property<int>("StoreId");

                    b.HasKey("UserId");

                    b.HasIndex("StoreId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "tuan1@gmail.com",
                            Fullname = "Dinh Viet Tuan",
                            IsActive = true,
                            Password = "10000:4i+HfkR4PJZs4iWO7xqT22y2/p98NWNeh0qjRy3LUq7l6OTz",
                            Phone = "123456789",
                            Role = 1,
                            StoreId = 1
                        },
                        new
                        {
                            UserId = 2,
                            Email = "tuan@gmail.com",
                            Fullname = "Dinh Viet Tuan",
                            IsActive = true,
                            Password = "10000:rMO0ZX7I7whcvRG64+E7qam7ECjKNsYzJjjtl1Jcfqkm9ViC",
                            Phone = "123456789",
                            Role = 2,
                            StoreId = 1
                        });
                });

            modelBuilder.Entity("LoginCodeFirst.Models.Product", b =>
                {
                    b.HasOne("LoginCodeFirst.Models.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LoginCodeFirst.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LoginCodeFirst.Models.Stock", b =>
                {
                    b.HasOne("LoginCodeFirst.Models.Product", "Product")
                        .WithMany("Stocks")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LoginCodeFirst.Models.Store", "Store")
                        .WithMany("Stocks")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LoginCodeFirst.Models.User", b =>
                {
                    b.HasOne("LoginCodeFirst.Models.Store", "Store")
                        .WithMany("Users")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
